/* @font-face {
  font-family: "Roboto-Regular";
  src: url("../../../../public/Roboto-Regular.ttf") format("opentype");
  font-weight: normal;
  font-display: swap;
} */

/* @font-face {
  font-family: "PornStarAcademy";
  src: url("../../../../public/fonts/sportsjersey.ttf") format("opentype");
  font-display: swap;
}

@font-face {
  font-family: "Interstate";
  src: url("../../../../public/fonts/overpass/overpass-extrabold.otf") format("opentype");
  font-display: swap;
} */

@font-face {
  font-family: "Collegiate";
  font-weight: normal;
  font-style: normal;

  src: url("../../../../public/fonts/collegiateflf/CollegiateInsideFLF.ttf") format("truetype");

  font-display: swap;
}

@font-face {
  font-family: "Interstate";
  font-weight: normal;
  font-style: normal;
  src: url("../../../../public/fonts/interstate-2/InterstateBlack.otf") format("opentype");
  font-display: swap;

  /* src: url("interstate_black.woff") format("woff"), url("interstate_black.ttf") format("truetype"); */
}

.addNamesNumberrsRow {
  display: flex;
  justify-content: space-between;
  border-bottom: 1px solid var(--borderColor);
  align-items: center;
  /* padding-bottom: 10px;
   */
  padding: 10px;
}

.namescheckboxDiv span {
  font-size: 14px;
}


.namescheckboxDiv {
  display: flex;
  gap: 10px;
  align-items: center;
}

.namesToolbarButton:hover {
  background: #F0F0F0;
  scale: 1.05;
}

.namesToolbarButton {
  background: transparent;
  border: 1px solid var(--borderColor);
  padding: 9px 10px;
  cursor: pointer;
}

.namesToolbarButtonActive {
  border: 1px solid var(--blue-color);
}

.namesToolbarButton img {
  height: 15px;
}

.namesButtonMainContainer {
  display: flex;
  gap: 10px;
}

.namescheckboxDiv input[type='checkbox'] {
  accent-color: #0000;
  margin-right: 5px;
  cursor: pointer;
}

.namesButtonMainContainer .colorNamesBox {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
}

/* -------- */
/* Disabled button style */
.namesToolbarButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

/* Disabled color box style */
.colorNamesBox[style*="not-allowed"] {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
}

/* Optional: Add a subtle grayscale filter on disabled buttons */
.namesToolbarButton:disabled img {
  filter: grayscale(70%);
}

/* Disabled Add Names/Numbers button */
.blackButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;

  gap: 10px;
}

.Deactive {
  opacity: 0.4;
  pointer-events: none;
  user-select: none;
}

.Active {
  opacity: 1;
  user-select: auto;
  pointer-events: all;
}

.stepToggleContainer {
  gap: 10px;
  display: flex;
  flex-direction: column;
}

.NamesToolbarBox {
  position: relative;
}

.blackButton {
  background-color: var(--black-color);
  color: white;
  border: none;
  height: 30px;
  margin: 15px 0;
  /* margin-top: 10px;
  margin-bottom: 10px; */
  width: 100%;
  padding: 10px;
  display: flex;
  justify-content: center;
  border-radius: 100px;
  align-items: center;
  padding: 6px 10px;
  cursor: pointer;
  /* animation: blink 1s infinite alternate; */
}

/* ---- */
.switch {
  position: relative;
  display: inline-block;
  width: 34px;
  height: 18px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
  border-radius: 34px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 12px;
  width: 14px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: .4s;
  border-radius: 50%;
}

input:checked+.slider {
  background-color: var(--black-color);
  /* Adjust to match screenshot blue */
}

input:checked+.slider:before {
  transform: translateX(14px);
}

@media (max-width: 768px) {
  .namesToolbarButton img {
    height: 10px;
  }

  .namescheckboxDiv span {
    font-size: 10px;
  }
}


/*  */

/* Add this new animation */




/* Stop blinking when clicked (e.g., when showAddnamesPopup is true) */
/* s */

/* Existing font-face and other styles remain unchanged */

/* Animation control based on Active/Deactive and clicked state */
/* .Active .blackButton {
  animation: blink 1s infinite alternate;
} */

.Active .blackButton.clicked {
  animation: none !important;
  /* Override blink when clicked */
  opacity: 1;
}

.Deactive .blackButton {
  animation: none;
  /* No animation in Deactive state */
}

/* Ensure disabled state stops animation */
.blackButton:disabled {
  animation: none;
  opacity: 0.5;
  cursor: not-allowed;
  pointer-events: none;
  gap: 10px;
}

/* Define the blink animation */
@keyframes blink {
  from {
    opacity: 1;
  }

  to {
    opacity: 0.3;
  }
}